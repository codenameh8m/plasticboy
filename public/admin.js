// –î–æ–±–∞–≤–∏—Ç—å –≤ admin.js –ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
function showUserStats() {
    fetch('/api/leaderboard?limit=100')
        .then(response => response.json())
        .then(data => {
            let content = '<h3>üë• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>';
            content += '<table style="width: 100%; border-collapse: collapse;">';
            content += '<thead><tr>';
            content += '<th style="text-align: left; padding: 10px; border-bottom: 2px solid #ddd;">–ü–æ–∑–∏—Ü–∏—è</th>';
            content += '<th style="text-align: left; padding: 10px; border-bottom: 2px solid #ddd;">Instagram</th>';
            content += '<th style="text-align: left; padding: 10px; border-bottom: 2px solid #ddd;">–°–æ–±—Ä–∞–Ω–æ</th>';
            content += '<th style="text-align: left; padding: 10px; border-bottom: 2px solid #ddd;">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</th>';
            content += '</tr></thead><tbody>';
            
            data.users.forEach((user, index) => {
                const badges = user.badges ? user.badges.map(b => getBadgeEmoji(b)).join(' ') : '-';
                content += '<tr>';
                content += `<td style="padding: 10px; border-bottom: 1px solid #eee;">#${index + 1}</td>`;
                content += `<td style="padding: 10px; border-bottom: 1px solid #eee;">@${user.instagramUsername}</td>`;
                content += `<td style="padding: 10px; border-bottom: 1px solid #eee;">${user.collectedCount}</td>`;
                content += `<td style="padding: 10px; border-bottom: 1px solid #eee;">${badges}</td>`;
                content += '</tr>';
            });
            
            content += '</tbody></table>';
            
            showNotification('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞', 'success');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
            const modal = document.createElement('div');
            modal.className = 'modal';
            modal.style.display = 'block';
            modal.innerHTML = `
                <div class="modal-content" style="max-width: 800px;">
                    <span class="close" onclick="this.parentElement.parentElement.remove()">&times;</span>
                    ${content}
                </div>
            `;
            document.body.appendChild(modal);
        })
        .catch(error => {
            console.error('Error loading user stats:', error);
            showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', 'error');
        });
}

// –ü–æ–ª—É—á–∏—Ç—å —ç–º–æ–¥–∑–∏ –¥–ª—è –±–µ–π–¥–∂–∞ (–¥—É–±–ª–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é)
function getBadgeEmoji(badge) {
    const badges = {
        'first_collect': 'üåü',
        'collector_5': 'ü•â',
        'collector_10': 'ü•à',
        'collector_25': 'ü•á',
        'collector_50': 'üíé',
        'collector_100': 'üëë'
    };
    return badges[badge] || 'üèÜ';
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
document.addEventListener('DOMContentLoaded', function() {
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
    const checkAdminPanel = setInterval(() => {
        const adminControls = document.querySelector('.admin-controls');
        if (adminControls && !document.getElementById('userStatsBtn')) {
            const statsBtn = document.createElement('button');
            statsBtn.id = 'userStatsBtn';
            statsBtn.textContent = 'üë• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π';
            statsBtn.onclick = showUserStats;
            statsBtn.style.marginLeft = '10px';
            adminControls.appendChild(statsBtn);
            clearInterval(checkAdminPanel);
        }
    }, 100);
});
