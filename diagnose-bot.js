// diagnose-bot.js - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Telegram –±–æ—Ç–∞

const axios = require('axios');
require('dotenv').config();

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const BOT_USERNAME = process.env.TELEGRAM_BOT_USERNAME;
const WEB_APP_URL = process.env.RENDER_EXTERNAL_URL || process.env.WEB_APP_URL || 'http://localhost:3000';

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TELEGRAM –ë–û–¢–ê');
console.log('================================\n');

async function diagnosBot() {
    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        console.log('1Ô∏è‚É£ –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:');
        console.log(`   TELEGRAM_BOT_TOKEN: ${BOT_TOKEN ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
        console.log(`   TELEGRAM_BOT_USERNAME: ${BOT_USERNAME || '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
        console.log(`   WEB_APP_URL: ${WEB_APP_URL}`);
        console.log(`   NODE_ENV: ${process.env.NODE_ENV || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n`);

        if (!BOT_TOKEN) {
            console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            console.log('üîß –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API
        console.log('2Ô∏è‚É£ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö TELEGRAM API:');
        try {
            const response = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`, {
                timeout: 10000
            });
            
            if (response.data.ok) {
                const botInfo = response.data.result;
                console.log(`   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ`);
                console.log(`   ü§ñ –ò–º—è –±–æ—Ç–∞: ${botInfo.first_name}`);
                console.log(`   üì± Username: @${botInfo.username}`);
                console.log(`   üÜî ID: ${botInfo.id}`);
                console.log(`   üîê Can join groups: ${botInfo.can_join_groups}`);
                console.log(`   üë• Can read all group messages: ${botInfo.can_read_all_group_messages}`);
                console.log(`   üéØ Supports inline queries: ${botInfo.supports_inline_queries}\n`);

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ username
                if (BOT_USERNAME && BOT_USERNAME !== botInfo.username) {
                    console.log(`   ‚ö†Ô∏è  –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï: –û–∂–∏–¥–∞–ª—Å—è @${BOT_USERNAME}, –ø–æ–ª—É—á–µ–Ω @${botInfo.username}`);
                    console.log(`   üîß –û–±–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_USERNAME –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è\n`);
                }
            } else {
                console.log(`   ‚ùå –û—à–∏–±–∫–∞ API: ${response.data.description}`);
            }
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error.message}`);
            if (error.response?.status === 401) {
                console.log(`   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞`);
            }
            console.log('');
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ webhook
        console.log('3Ô∏è‚É£ –°–¢–ê–¢–£–° WEBHOOK:');
        try {
            const webhookResponse = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
            const webhookInfo = webhookResponse.data.result;
            
            console.log(`   üîó URL: ${webhookInfo.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
            console.log(`   üì® Pending updates: ${webhookInfo.pending_update_count || 0}`);
            console.log(`   ‚úÖ Has custom certificate: ${webhookInfo.has_custom_certificate || false}`);
            console.log(`   üîÑ Allowed updates: ${webhookInfo.allowed_updates?.join(', ') || '–≤—Å–µ'}`);
            
            if (webhookInfo.last_error_date) {
                const errorDate = new Date(webhookInfo.last_error_date * 1000);
                console.log(`   ‚ö†Ô∏è  –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${errorDate.toLocaleString()}`);
                console.log(`   üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: ${webhookInfo.last_error_message}`);
            } else {
                console.log(`   ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ`);
            }
            console.log('');
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: ${error.message}\n`);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
        console.log('4Ô∏è‚É£ –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê:');
        try {
            const commandsResponse = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getMyCommands`);
            const commands = commandsResponse.data.result;
            
            if (commands.length > 0) {
                console.log(`   ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–æ–º–∞–Ω–¥: ${commands.length}`);
                commands.forEach(cmd => {
                    console.log(`   /${cmd.command} - ${cmd.description}`);
                });
            } else {
                console.log(`   ‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã`);
            }
            console.log('');
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥: ${error.message}\n`);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Web App URL
        console.log('5Ô∏è‚É£ –î–û–°–¢–£–ü–ù–û–°–¢–¨ WEB APP:');
        try {
            const webAppResponse = await axios.get(`${WEB_APP_URL}/health`, {
                timeout: 10000
            });
            
            console.log(`   ‚úÖ Web App –¥–æ—Å—Ç—É–ø–µ–Ω`);
            console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${webAppResponse.data.status}`);
            console.log(`   üïê –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${webAppResponse.data.timestamp}`);
            if (webAppResponse.data.totalPoints !== undefined) {
                console.log(`   üìç –¢–æ—á–µ–∫ –≤ –±–∞–∑–µ: ${webAppResponse.data.totalPoints}`);
            }
        } catch (error) {
            console.log(`   ‚ùå Web App –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
            console.log(`   üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω`);
        }
        console.log('');

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è polling —Ä–µ–∂–∏–º–∞)
        console.log('6Ô∏è‚É£ –ü–û–°–õ–ï–î–ù–ò–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø:');
        try {
            // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ webhook
            const webhookResponse = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
            const webhookInfo = webhookResponse.data.result;
            
            if (webhookInfo.url) {
                console.log(`   ‚ÑπÔ∏è  Webhook –∞–∫—Ç–∏–≤–µ–Ω, getUpdates –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
                console.log(`   üì® Pending updates –≤ webhook: ${webhookInfo.pending_update_count || 0}`);
            } else {
                console.log(`   üîÑ –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...`);
                const updatesResponse = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getUpdates?limit=5`);
                const updates = updatesResponse.data.result;
                
                if (updates.length > 0) {
                    console.log(`   üì¨ –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${updates.length}`);
                    updates.forEach((update, i) => {
                        const updateType = Object.keys(update).find(key => key !== 'update_id') || 'unknown';
                        console.log(`   ${i + 1}. Update ID: ${update.update_id}, Type: ${updateType}`);
                    });
                } else {
                    console.log(`   üì≠ –ù–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç`);
                }
            }
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${error.message}`);
        }
        console.log('');

        // –ò—Ç–æ–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        console.log('7Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        if (!BOT_TOKEN) {
            console.log('   üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
        const webhookResponse = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
        const webhookInfo = webhookResponse.data.result;
        
        if (process.env.NODE_ENV === 'production') {
            if (!webhookInfo.url) {
                console.log('   üîß –í production –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω webhook');
                console.log('   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ bot-server.js –¥–ª—è –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook');
            } else {
                console.log('   ‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è production');
            }
        } else {
            if (webhookInfo.url) {
                console.log('   üîß –í development —Ä–µ–∂–∏–º–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å polling');
                console.log('   üí° –£–¥–∞–ª–∏—Ç–µ webhook: curl -X POST https://api.telegram.org/bot<TOKEN>/deleteWebhook');
            } else {
                console.log('   ‚úÖ Polling —Ä–µ–∂–∏–º –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è development');
            }
        }

        console.log('\nüéØ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
        console.log(`   1. –û—Ç–∫—Ä–æ–π—Ç–µ https://t.me/${BOT_USERNAME || 'your_bot_username'}`);
        console.log(`   2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start`);
        console.log(`   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ bot-server.js`);

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
diagnosBot().then(() => {
    console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
});
