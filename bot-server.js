// bot-server.js - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Render.com Worker

const axios = require('axios');
require('dotenv').config();

console.log('üöÄ =================================================');
console.log('ü§ñ PlasticBoy Telegram Bot Worker - –ü–†–û–°–¢–ê–Ø –í–ï–†–°–ò–Ø');
console.log('üöÄ =================================================');

// –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const WEB_APP_URL = process.env.RENDER_EXTERNAL_URL || process.env.WEB_APP_URL || 'http://localhost:3000';
const BOT_USERNAME = process.env.TELEGRAM_BOT_USERNAME;
const IS_PRODUCTION = process.env.NODE_ENV === 'production';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
console.log(`   TELEGRAM_BOT_TOKEN: ${BOT_TOKEN ? '‚úÖ –µ—Å—Ç—å' : '‚ùå –ù–ï–¢'}`);
console.log(`   TELEGRAM_BOT_USERNAME: ${BOT_USERNAME ? `‚úÖ ${BOT_USERNAME}` : '‚ùå –ù–ï–¢'}`);
console.log(`   WEB_APP_URL: ${WEB_APP_URL}`);
console.log(`   NODE_ENV: ${process.env.NODE_ENV || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
console.log(`   IS_PRODUCTION: ${IS_PRODUCTION}`);

// –ü–†–û–í–ï–†–ö–ê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–•
if (!BOT_TOKEN) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.error('üîß –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ Render Dashboard Environment Variables');
    process.exit(1);
}

if (!BOT_USERNAME) {
    console.error('‚ùå TELEGRAM_BOT_USERNAME –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.error('üîß –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ Render Dashboard Environment Variables');
    process.exit(1);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
async function setupWebhook() {
    try {
        console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook...');
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        const botInfoResponse = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`);
        const botInfo = botInfoResponse.data.result;
        
        console.log('‚úÖ –£–°–ü–ï–®–ù–û–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö TELEGRAM!');
        console.log(`üì± Bot Username: @${botInfo.username}`);
        console.log(`üìù Bot Name: ${botInfo.first_name}`);
        console.log(`üÜî Bot ID: ${botInfo.id}`);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ webhook
        console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ webhook...');
        try {
            await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/deleteWebhook`);
            console.log('‚úÖ –°—Ç–∞—Ä—ã–µ webhook —É–¥–∞–ª–µ–Ω—ã');
        } catch (error) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ webhook (–≤–æ–∑–º–æ–∂–Ω–æ –∏—Ö –Ω–µ –±—ã–ª–æ)');
        }

        if (IS_PRODUCTION) {
            // –í production –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ–±-—Å–µ—Ä–≤–∏—Å
            console.log('üåê PRODUCTION MODE - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä');
            
            const baseUrl = WEB_APP_URL.endsWith('/') ? WEB_APP_URL.slice(0, -1) : WEB_APP_URL;
            const webhookPath = `/${BOT_TOKEN}`;
            const webhookUrl = `${baseUrl}${webhookPath}`;
            
            console.log(`üîó Base URL: ${baseUrl}`);
            console.log(`üîó Webhook path: ${webhookPath}`);
            console.log(`üîó Final webhook URL: ${webhookUrl}`);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook —á–µ—Ä–µ–∑ API
            try {
                const webhookResponse = await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`, {
                    url: webhookUrl,
                    allowed_updates: ['message', 'callback_query']
                });
                
                console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', webhookResponse.data);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
                const webhookInfo = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
                console.log('üìã Webhook info:', {
                    url: webhookInfo.data.result.url,
                    has_custom_certificate: webhookInfo.data.result.has_custom_certificate,
                    pending_update_count: webhookInfo.data.result.pending_update_count,
                    last_error_date: webhookInfo.data.result.last_error_date,
                    last_error_message: webhookInfo.data.result.last_error_message
                });
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', error.response?.data || error.message);
                throw error;
            }
            
        } else {
            console.log('üè† DEVELOPMENT MODE - Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä)');
        }

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
        console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞...');
        const commands = [
            {
                command: 'start',
                description: 'üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É'
            },
            {
                command: 'map',
                description: 'üó∫Ô∏è –ö–∞—Ä—Ç–∞ —Å –º–æ–¥–µ–ª—è–º–∏'
            },
            {
                command: 'leaderboard',
                description: 'üèÜ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤'
            },
            {
                command: 'stats',
                description: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã'
            },
            {
                command: 'help',
                description: '‚ùì –ü–æ–º–æ—â—å'
            }
        ];

        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/setMyCommands`, {
            commands: commands
        });
        console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
        const description = `üéØ PlasticBoy - –∏–≥—Ä–∞ –ø–æ —Å–±–æ—Ä—É 3D –º–æ–¥–µ–ª–µ–π –≤ –ê–ª–º–∞—Ç—ã!

üéÆ –ù–∞–π–¥–∏ QR-–∫–æ–¥—ã –º–æ–¥–µ–ª–µ–π –ø–æ –≥–æ—Ä–æ–¥—É, —Å–∫–∞–Ω–∏—Ä—É–π –∏—Ö –∏ —Å–æ–±–∏—Ä–∞–π –∫–æ–ª–ª–µ–∫—Ü–∏—é!
üèÜ –°–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
üì± –ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è —á–µ—Ä–µ–∑ Telegram –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

–ö–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/map - –ö–∞—Ä—Ç–∞ —Å –º–æ–¥–µ–ª—è–º–∏  
/leaderboard - –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–º–æ—â—å`;

        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/setMyDescription`, {
            description: description
        });
        console.log('‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

        // –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        const shortDescription = 'üéØ –ò–≥—Ä–∞ –ø–æ —Å–±–æ—Ä—É 3D –º–æ–¥–µ–ª–µ–π –≤ –ê–ª–º–∞—Ç—ã. –ù–∞–π–¥–∏ QR-–∫–æ–¥—ã –∏ —Å–æ–±–∏—Ä–∞–π –∫–æ–ª–ª–µ–∫—Ü–∏—é!';
        await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/setMyShortDescription`, {
            short_description: shortDescription
        });
        console.log('‚úÖ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

        console.log('\nüéâ –ë–û–¢ –ù–ê–°–¢–†–û–ï–ù –£–°–ü–ï–®–ù–û!');
        console.log(`üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É @${botInfo.username} –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
        console.log(`üîó –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/${botInfo.username}`);
        
        if (IS_PRODUCTION) {
            console.log('\nüìã –í–ê–ñ–ù–û:');
            console.log('‚Ä¢ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ–±-—Å–µ—Ä–≤–∏—Å');
            console.log('‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞');
            console.log('‚Ä¢ –≠—Ç–æ—Ç worker —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–æ—Ç–∞, –ª–æ–≥–∏–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ');
        }

    } catch (error) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', error);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
async function monitorBot() {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞...');
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
        const webhookInfo = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
        const info = webhookInfo.data.result;
        
        console.log('üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:');
        console.log(`   üîó Webhook URL: ${info.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
        console.log(`   üì® Pending updates: ${info.pending_update_count || 0}`);
        
        if (info.last_error_date) {
            const errorDate = new Date(info.last_error_date * 1000);
            console.log(`   ‚ö†Ô∏è  –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${errorDate.toLocaleString()}`);
            console.log(`   üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: ${info.last_error_message}`);
        } else {
            console.log(`   ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        if (WEB_APP_URL) {
            try {
                const healthResponse = await axios.get(`${WEB_APP_URL}/health`, {
                    timeout: 5000
                });
                console.log(`   üåê –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä: ‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç (${healthResponse.data.status})`);
            } catch (error) {
                console.log(`   üåê –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä: ‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫
async function startWorker() {
    try {
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
        await setupWebhook();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        setInterval(monitorBot, 5 * 60 * 1000);
        
        console.log('\nüîÑ Worker –∞–∫—Ç–∏–≤–µ–Ω, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç...');
        
        // Graceful shutdown
        const gracefulShutdown = (signal) => {
            console.log(`\nüìõ –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª ${signal}, –∑–∞–≤–µ—Ä—à–∞–µ–º worker...`);
            process.exit(0);
        };
        
        process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));
        process.on('SIGINT', () => gracefulShutdown('SIGINT'));
        
        // –î–µ—Ä–∂–∏–º worker –∂–∏–≤—ã–º
        setInterval(() => {
            console.log(`‚è∞ Worker —Ä–∞–±–æ—Ç–∞–µ—Ç - ${new Date().toLocaleTimeString()}`);
        }, 30 * 60 * 1000); // –ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
        
    } catch (error) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê worker:', error);
        process.exit(1);
    }
}

// –ó–ê–ü–£–°–ö
startWorker();
